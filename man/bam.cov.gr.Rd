% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bamUtils.R
\name{bam.cov.gr}
\alias{bam.cov.gr}
\title{Get coverage as GRanges from BAM on custom set of GRanges}
\usage{
bam.cov.gr(bam, gr, bai = NULL, count.all = FALSE, isPaired = TRUE,
  isProperPair = TRUE, isUnmappedQuery = FALSE, hasUnmappedMate = FALSE,
  isNotPassingQualityControls = FALSE, isDuplicate = FALSE,
  isValidVendorRead = TRUE, mc.cores = 1, chunksize = 10,
  verbose = FALSE, ...)
}
\arguments{
\item{bam}{Input BAM file. Advisable to make the input BAM a BamFile instance instead of a plain string, so that the index does not have to be reloaded.}

\item{gr}{GRanges of intervals to retrieve}

\item{bai}{Input BAM index file.}

\item{isPaired}{See documentation for \code{scanBamFlag}. Default NA}

\item{isProperPair}{See documentation for \code{scanBamFlag}. Default NA}

\item{isUnmappedQuery}{See documentation for \code{scanBamFlag}. Default NA}

\item{hasUnmappedMate}{See documentation for \code{scanBamFlag}. Default NA}

\item{isNotPassingQualityControls}{See documentation for \code{scanBamFlag}. Default NA}

\item{isDuplicate}{See documentation for \code{scanBamFlag}. Default FALSE}

\item{isValidVendorRead}{See documentation for \code{scanBamFlag}. Default TRUE}

\item{mc.cores}{Number of cores in \code{mclapply} call.}

\item{chunksize}{How many intervals to process per core. Default 10.}

\item{verbose}{Increase verbosity}

\item{...}{passed to \code{scanBamFlag}}
}
\value{
GRanges parallel to input GRanges, but with metadata filled in.
}
\description{
Gets coverage from BAM in supplied GRanges using 'countBam()', returning GRanges with coverage counts in
each of the provided GRanges (different from 'bamUtils::bam.cov()') specified as the 
columns $file, $records, and $nucleotides in the values field

Basically a wrapper for 'Rsamtools::countBam()' with some standard settings for 'Rsamtools::ScanBamParams()'
}
